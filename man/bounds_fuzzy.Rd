% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bounds_fuzzy.R
\name{bounds_fuzzy}
\alias{bounds_fuzzy}
\title{Partial‑Identification Bounds for \strong{Fuzzy} RDDs with Manipulation}
\usage{
bounds_fuzzy(
  x,
  y,
  z,
  cutoff,
  true_counts,
  weights = NULL,
  poly_order = 1L,
  bounds = c("both", "lower", "upper"),
  treat_direction = c("increase", "decrease"),
  solver = getOption("rdpartial.solver", "ECOS"),
  runVarPlots = FALSE,
  ylab = NULL,
  xlab = NULL,
  ...
)
}
\arguments{
\item{z}{Numeric vector (0/1) – treatment take‑up.}

\item{bounds}{Character – which bound(s) to return; one of
"both" (default), "lower", "upper".}

\item{treat_direction}{Either "increase" (treatment prob. jumps \emph{up} at the
cutoff – standard case) or "decrease" (jumps \emph{down}, e.g. donor \emph{deferral}
example).  Determines the sign of the optimisation objective.}

\item{solver}{Character – CVXR solver (default taken from
\code{getOption("rdpartial.solver")}; package default is "ECOS").}

\item{...}{Further arguments passed on to \code{\link[CVXR:psolve]{CVXR::solve()}}.  Use this to
override CVXR tolerances or provide a different solver control list.}
}
\value{
Numeric vector of length 2 (\code{lower}, \code{upper}) when \code{bounds = "both"};
otherwise a single numeric.  CVXR solutions attached as attributes
\code{opt_lwr}/\code{opt_upr}.
}
\description{
Extension of \code{\link[=bounds_sharp]{bounds_sharp()}} to \emph{fuzzy} designs where treatment take‑up
jumps (up \strong{or} down) at the cutoff but is not deterministic.  The estimator
solves a linear‑fractional programme as described in Rosenman \emph{et al.} (2025)
using \code{CVXR}.  Manipulation to the right of the cutoff is bounded by
\code{true_counts} obtained from \code{\link[=density_estimation]{density_estimation()}}.
}
\section{Required Inputs}{

\itemize{
\item \strong{\code{x}} – running variable.
\item \strong{\code{y}} – outcome.
\item \strong{\code{z}} – realised treatment indicator (0/1).
\item \strong{\code{cutoff}} – threshold.
\item \strong{\code{true_counts}} – \code{data.frame(x, n_true)} of non‑manipulated counts.
}
}

\examples{
set.seed(321)
n      <- 6000
x      <- rpois(n, 15)
cutoff <- 16
z      <- rbinom(n, 1, prob = ifelse(x >= cutoff, 0.8, 0.2))
y0     <- 0.2 * x + rnorm(n)
y1     <- y0 + 2
y      <- ifelse(z == 1, y1, y0)

freq <- table(factor(x[x >= cutoff], levels = cutoff:max(x)))
tc   <- data.frame(
  x      = as.integer(names(freq)),
  n_true = round(as.vector(freq) * 0.85)
)

bounds_fuzzy(x, y, z, cutoff, true_counts = tc)

}
