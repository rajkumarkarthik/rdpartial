% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bounds_sharp.R
\name{bounds_sharp}
\alias{bounds_sharp}
\title{Partial‑Identification Bounds for \strong{Sharp} RDDs with Manipulation}
\usage{
bounds_sharp(
  x,
  y,
  cutoff,
  true_counts,
  weights = NULL,
  poly_order = 1L,
  bounds = c("both", "lower", "upper"),
  solver = getOption("rdpartial.solver", "ECOS"),
  ...
)
}
\arguments{
\item{bounds}{Character – which bound(s) to return; one of
"both" (default), "lower", "upper".}

\item{solver}{Character – CVXR solver (default taken from
\code{getOption("rdpartial.solver")}; package default is "ECOS").}

\item{...}{Further arguments passed on to \code{\link[CVXR:psolve]{CVXR::solve()}}.  Use this to
override CVXR tolerances or provide a different solver control list.}
}
\value{
A numeric vector of length 2 (\code{lower}, \code{upper}) when \code{bounds = "both"}; otherwise a single numeric.  The full \code{CVXR} solution objects are
attached as attributes \code{opt_lwr} / \code{opt_upr} for diagnostic purposes.
}
\description{
Compute Manski–type lower/upper bounds on the causal effect at a Regression
Discontinuity Design (\emph{sharp} treatment assignment) when the running
variable can be strategically manipulated to the right of the cutoff.  The
implementation mirrors Algorithm 1 in Rosenman \emph{et al.} (2025) and is the
foundation for the fuzzy variant \code{\link[=bounds_fuzzy]{bounds_fuzzy()}}.
}
\examples{
set.seed(123)
n  <- 4000
x  <- rpois(n, lambda = 15)
y0 <- 0.1 * x + 0.002 * x^2 + rnorm(n)
y1 <- y0 + 1                      # treatment adds 1
cutoff <- 16
y <- ifelse(x >= cutoff, y1, y0)  # sharp assignment

# Assume 90 \% of post‑cutoff mass is genuine
tc <- data.frame(
  x      = cutoff:max(x),
  n_true = round(tabulate(x[x >= cutoff] + 1L) * 0.9)
)

bounds_sharp(x, y, cutoff, true_counts = tc)

}
